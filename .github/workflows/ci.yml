name: CI

# TODO: Don't do this! Use GitHub's encrypted secrets and set the value of the
# variable as ${{ secrets.RAILS_MASTER_KEY }}
# Ref: https://docs.github.com/en/actions/reference/encrypted-secrets
env:
  RAILS_MASTER_KEY: b8cc3ac9ab8a3280b03af3d29b2e50ca

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Ruby specs
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost/ruby2-rails5-bootstrap-heroku_test
      RAILS_ENV: test

    services:
      db:
        image: postgres:12
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - uses: nanasess/setup-chromedriver@v1.0.1
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6.9'
        bundler-cache: true
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run:
        echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Yarn
      run:  yarn
    - name: Set up Database
      run: bundle exec rails db:create
    - name: Run specs
      run: bundle exec rake spec
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: 'coverage/lcov.info'
